---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";
import HeroLayout from "../layouts/HeroLayout.astro";
import LoginNav from "../components/LoginNav.astro";
import Form from "../components/Form.astro";


const title = "Signin";
const [message, linkUrl, linkMessage] = [
	"New Here?",
	"/register",
	"Create an account"
];
const [formAction, formMethod, formInputs] = [
	"../api/auth/signin",
	"post",
	["email", "password"]
];

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("session")) {
	const sessionCookie = Astro.cookies.get("session").value;
	const decodedCookie = await auth.verifySessionCookie(sessionCookie);

	if (decodedCookie) return Astro.redirect("/");
}
---

<Layout title={title}>
	<HeroLayout>
		<LoginNav message={message} linkUrl={linkUrl} linkMessage={linkMessage} />
		<Form
			action={formAction}
			method={formMethod}
			buttonMessage={title}
			inputs={formInputs}
		/>
	</HeroLayout>
</Layout>

<script>
	import {
		getAuth,
		inMemoryPersistence,
		signInWithEmailAndPassword
	} from "firebase/auth";
	import { app } from "../firebase/client";

	const auth = getAuth(app);

	// This will prevent the browser from storing session data
	auth.setPersistence(inMemoryPersistence);

	const form = document.querySelector("form") as HTMLFormElement;
	form.addEventListener("submit", async (e) => {
		e.preventDefault();

		const formData = new FormData(form);
		const email = formData.get("email")?.toString();
		const password = formData.get("password")?.toString();

		if (!email || !password) return;

		const userCredential = await signInWithEmailAndPassword(
			auth,
			email,
			password
		);
		const idToken = await userCredential.user.getIdToken();
		const response = await fetch("/api/auth/signin", {
			method: "GET",
			headers: {
				Authorization: `Bearer ${idToken}`
			}
		});

		if (response.redirected) window.location.assign(response.url);
	});
</script>
